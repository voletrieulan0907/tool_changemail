name: Build and Release
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install PyInstaller
      run: pip install pyinstaller
    
    - name: Install additional dependencies (if needed)
      run: |
        # Thêm các package cần thiết ở đây
        # pip install requests
        # pip install tkinter (usually built-in)
      shell: powershell
    
    - name: Build application (folder mode)
      run: |
        pyinstaller --onedir --windowed --name="MyApp" app.py
        # Thêm options khác nếu cần:
        # --icon=icon.ico (nếu có icon)
        # --add-data="data;data" (nếu có data files)
      shell: powershell
    
    - name: Create folder structure
      run: |
        # Tạo các folder chuyên nghiệp
        New-Item -ItemType Directory -Force -Path "dist/MyApp/internal"
        New-Item -ItemType Directory -Force -Path "dist/MyApp/config" 
        New-Item -ItemType Directory -Force -Path "dist/MyApp/data"
        New-Item -ItemType Directory -Force -Path "dist/MyApp/logs"
        
        # Copy files bổ sung (nếu có)
        if (Test-Path "README.md") { Copy-Item "README.md" "dist/MyApp/" }
        if (Test-Path "config.json") { Copy-Item "config.json" "dist/MyApp/config/" }
        
        # Tạo file version
        $version = "${{ github.run_number }}.0.0"
        "App Version: $version`nBuild: ${{ github.sha }}" | Out-File -FilePath "dist/MyApp/version.txt"
        
        # Tạo file thông tin
        @"
MyApp - Version $version

Cấu trúc thư mục:
├── MyApp.exe          # Ứng dụng chính
├── internal/          # Các module nội bộ
├── config/            # File cấu hình
├── data/              # Dữ liệu ứng dụng
├── logs/              # File log
└── _internal/         # PyInstaller files

Cách sử dụng:
1. Chạy MyApp.exe
2. Cấu hình trong folder config/
3. Dữ liệu được lưu trong folder data/
"@ | Out-File -FilePath "dist/MyApp/README.txt"
      shell: powershell
    
    - name: Create ZIP package
      run: |
        cd dist
        Compress-Archive -Path MyApp -DestinationPath MyApp-v${{ github.run_number }}-windows.zip
      shell: powershell
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MyApp-windows-build
        path: dist/MyApp-v${{ github.run_number }}-windows.zip
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v1.0.${{ github.run_number }}"
        name: "MyApp v1.0.${{ github.run_number }}"
        files: dist/MyApp-v${{ github.run_number }}-windows.zip
        draft: false
        prerelease: false
        body: |
          ## 🚀 MyApp v1.0.${{ github.run_number }}
          
          ### 📦 Tải xuống
          - **MyApp-v${{ github.run_number }}-windows.zip** - Phiên bản Windows (folder structure)
          
          ### 📁 Cấu trúc
          ```
          MyApp/
          ├── MyApp.exe          # Ứng dụng chính
          ├── internal/          # Module nội bộ
          ├── config/            # Cấu hình
          ├── data/              # Dữ liệu
          ├── logs/              # Log files
          └── _internal/         # PyInstaller dependencies
          ```
          
          ### 🔧 Cài đặt
          1. Tải file ZIP
          2. Giải nén vào thư mục bất kỳ
          3. Chạy `MyApp.exe`
          
          ### 📊 Thông tin build
          - **Commit:** ${{ github.sha }}
          - **Build number:** ${{ github.run_number }}
          - **Build time:** ${{ github.event.head_commit.timestamp }}
          - **Commit message:** ${{ github.event.head_commit.message }}
          
          ### 🔄 API Update Check
          Sử dụng endpoint: `https://api.github.com/repos/${{ github.repository }}/releases/latest`
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
